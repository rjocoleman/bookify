// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.898
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func SetupPage(serviceAccountEmail string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = SetupPageWithError("", serviceAccountEmail).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func SetupPageWithError(errorMsg string, serviceAccountEmail string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Setup - Bookify</title><script src=\"https://unpkg.com/htmx.org@1.9.10\"></script><script src=\"https://cdn.tailwindcss.com\"></script></head><body class=\"bg-gray-100 min-h-screen\"><div class=\"max-w-md mx-auto pt-8\"><div class=\"bg-white rounded-lg shadow p-6\"><h1 class=\"text-2xl font-bold mb-6 text-center\">Setup Bookify</h1>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if errorMsg != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(errorMsg)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/setup.templ`, Line: 23, Col: 17}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<p class=\"text-gray-600 mb-6 text-sm\">Configure your Google Drive account. Make sure you've:</p><ol class=\"text-gray-600 mb-6 text-sm list-decimal list-inside space-y-1\"><li>Created a service account in Google Cloud Console</li><li>Downloaded the JSON key file</li><li>Set the key file path or content in environment variables</li><li>Shared your Google Drive folder with the service account email</li></ol>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if serviceAccountEmail != "" && serviceAccountEmail != "No service account configured" && serviceAccountEmail != "Error reading service account" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<div class=\"mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\"><p class=\"text-sm text-blue-800\"><strong>Service Account Email:</strong> <code class=\"bg-blue-100 px-2 py-1 rounded text-xs ml-2\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(serviceAccountEmail)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/setup.templ`, Line: 39, Col: 86}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</code></p><p class=\"text-xs text-blue-600 mt-2\">Make sure to share your Google Drive folder with this email address.</p></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<form hx-post=\"/setup\" hx-target=\"body\" class=\"space-y-4\"><div><label class=\"block text-sm font-medium text-gray-700 mb-1\">Account Name</label> <input name=\"name\" type=\"text\" required placeholder=\"e.g., My Kobo Account\" class=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"></div><div><label class=\"block text-sm font-medium text-gray-700 mb-1\">Folder ID or Share URL</label> <input id=\"folder_input\" name=\"folder_id\" type=\"text\" required placeholder=\"Google Drive folder ID or share URL\" class=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\" oninput=\"extractFolderID(this)\"><p class=\"text-xs text-gray-500 mt-1\">Enter either the folder ID or paste a Google Drive share URL</p></div><button type=\"submit\" class=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded-md transition-colors\">Create Account</button></form></div></div><script>\n\t\t\t\tfunction extractFolderID(input) {\n\t\t\t\t\tconst value = input.value.trim();\n\n\t\t\t\t\t// Check if it's a Google Drive URL\n\t\t\t\t\tconst folderMatch = value.match(/\\/folders\\/([a-zA-Z0-9_-]+)/);\n\t\t\t\t\tconst shareMatch = value.match(/\\/drive\\/folders\\/([a-zA-Z0-9_-]+)/);\n\t\t\t\t\tconst idMatch = value.match(/[?&]id=([a-zA-Z0-9_-]+)/);\n\n\t\t\t\t\tif (folderMatch) {\n\t\t\t\t\t\t// Extract from /folders/ URL\n\t\t\t\t\t\tinput.value = folderMatch[1];\n\t\t\t\t\t\tinput.style.borderColor = '#10B981'; // Green border\n\t\t\t\t\t} else if (shareMatch) {\n\t\t\t\t\t\t// Extract from /drive/folders/ URL\n\t\t\t\t\t\tinput.value = shareMatch[1];\n\t\t\t\t\t\tinput.style.borderColor = '#10B981'; // Green border\n\t\t\t\t\t} else if (idMatch) {\n\t\t\t\t\t\t// Extract from ?id= parameter\n\t\t\t\t\t\tinput.value = idMatch[1];\n\t\t\t\t\t\tinput.style.borderColor = '#10B981'; // Green border\n\t\t\t\t\t} else if (value.length > 0 && !value.includes('/')) {\n\t\t\t\t\t\t// Looks like a direct folder ID\n\t\t\t\t\t\tinput.style.borderColor = '#10B981'; // Green border\n\t\t\t\t\t} else if (value.length > 0) {\n\t\t\t\t\t\t// Invalid URL format\n\t\t\t\t\t\tinput.style.borderColor = '#EF4444'; // Red border\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Empty, reset to default\n\t\t\t\t\t\tinput.style.borderColor = '#D1D5DB'; // Gray border\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t</script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
