package templates

templ SetupPage(serviceAccountEmail string) {
	@SetupPageWithError("", serviceAccountEmail)
}

templ SetupPageWithError(errorMsg string, serviceAccountEmail string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Setup - Bookify</title>
			<script src="https://unpkg.com/htmx.org@1.9.10"></script>
			<script src="https://cdn.tailwindcss.com"></script>
		</head>
		<body class="bg-gray-100 min-h-screen">
			<div class="max-w-md mx-auto pt-8">
				<div class="bg-white rounded-lg shadow p-6">
					<h1 class="text-2xl font-bold mb-6 text-center">Setup Bookify</h1>
					if errorMsg != "" {
						<div class="mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded">
							{ errorMsg }
						</div>
					}
					<p class="text-gray-600 mb-6 text-sm">
						Configure your Google Drive account. Make sure you've:
					</p>
					<ol class="text-gray-600 mb-6 text-sm list-decimal list-inside space-y-1">
						<li>Created a service account in Google Cloud Console</li>
						<li>Downloaded the JSON key file</li>
						<li>Set the key file path or content in environment variables</li>
						<li>Shared your Google Drive folder with the service account email</li>
					</ol>
					if serviceAccountEmail != "" && serviceAccountEmail != "No service account configured" && serviceAccountEmail != "Error reading service account" {
						<div class="mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
							<p class="text-sm text-blue-800">
								<strong>Service Account Email:</strong>
								<code class="bg-blue-100 px-2 py-1 rounded text-xs ml-2">{ serviceAccountEmail }</code>
							</p>
							<p class="text-xs text-blue-600 mt-2">
								Make sure to share your Google Drive folder with this email address.
							</p>
						</div>
					}
					<form hx-post="/setup" hx-target="body" class="space-y-4">
						<div>
							<label class="block text-sm font-medium text-gray-700 mb-1">Account Name</label>
							<input
								name="name"
								type="text"
								required
								placeholder="e.g., My Kobo Account"
								class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
							/>
						</div>
						<div>
							<label class="block text-sm font-medium text-gray-700 mb-1">Folder ID or Share URL</label>
							<input
								id="folder_input"
								name="folder_id"
								type="text"
								required
								placeholder="Google Drive folder ID or share URL"
								class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
								oninput="extractFolderID(this)"
							/>
							<p class="text-xs text-gray-500 mt-1">
								Enter either the folder ID or paste a Google Drive share URL
							</p>
						</div>
						<button
							type="submit"
							class="w-full bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded-md transition-colors"
						>
							Create Account
						</button>
					</form>
				</div>
			</div>

			<script>
				function extractFolderID(input) {
					const value = input.value.trim();

					// Check if it's a Google Drive URL
					const folderMatch = value.match(/\/folders\/([a-zA-Z0-9_-]+)/);
					const shareMatch = value.match(/\/drive\/folders\/([a-zA-Z0-9_-]+)/);
					const idMatch = value.match(/[?&]id=([a-zA-Z0-9_-]+)/);

					if (folderMatch) {
						// Extract from /folders/ URL
						input.value = folderMatch[1];
						input.style.borderColor = '#10B981'; // Green border
					} else if (shareMatch) {
						// Extract from /drive/folders/ URL
						input.value = shareMatch[1];
						input.style.borderColor = '#10B981'; // Green border
					} else if (idMatch) {
						// Extract from ?id= parameter
						input.value = idMatch[1];
						input.style.borderColor = '#10B981'; // Green border
					} else if (value.length > 0 && !value.includes('/')) {
						// Looks like a direct folder ID
						input.style.borderColor = '#10B981'; // Green border
					} else if (value.length > 0) {
						// Invalid URL format
						input.style.borderColor = '#EF4444'; // Red border
					} else {
						// Empty, reset to default
						input.style.borderColor = '#D1D5DB'; // Gray border
					}
				}
			</script>
		</body>
	</html>
}
